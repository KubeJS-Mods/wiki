title: "FAQ"
description: "Häufig gestellte Fragen"

q-info: "Was macht diese Mod?"
a-info: "Diese Mod ermöglicht es dir, Skripte in der JavaScript-Sprache zu schreiben, um deinen Server zu verwalten, neue Blöcke und Items hinzuzufügen, Rezepte zu ändern, eigene Event-Handler für Quest-Mods hinzuzufügen und vieles mehr!"

q-how-use: "Wie benutze ich sie?"
a-how-use: "Wenn du das Spiel zum ersten Mal mit der Mod startest, wird im Minecraft-Verzeichnis ein Ordner namens `kubejs` erstellt, der Beispiele und eine README.txt enthält. Schau einfach mal rein!"

q-js-help: "Aber ich kenne mich überhaupt nicht mit JavaScript aus!"
a-js-help: "Das ist okay. Es gibt hier genügend Beispiele und vorgefertigte Skripte. Und wenn du trotzdem nicht weiterkommst, kannst du im Support-Kanal unseres Discords nach Hilfe fragen, aber bitte sei möglichst genau."

q-reload: "Kann ich Skripte neu laden?"
a-reload: "Ja, nutze einfach den Command `/reload`, um `server_scripts/` neu zu laden, `F3 + T`, um `client_scripts/` neu zu laden, und `/kubejs reload startup_scripts`, um `startup_scripts/` neu zu laden. Wenn du nur ein Event testen möchtest, kannst du auch `/kubejs reload server_scripts` ausführen. Beachte: Nicht alles kann neu geladen werden. Manche Dinge erfordern einen Neustart des Spiels, manche nur der Welt, manche funktionieren auch im laufenden Betrieb. Das Neuladen von Startup-Skripten wird nicht empfohlen, aber wenn du nur Event-Listener hast, sollte es kein Problem sein."

q-mod-support: "Welche Mod-Rezepte werden unterstützt / wird Mod X unterstützt?"
a-mod-support: "Wenn die Mod Datapack-Rezepte verwendet, wird sie standardmäßig von KubeJS unterstützt. Einige kompliziertere Mods erfordern Addon-Mods, aber theoretisch sollten sie auch mit Datapack-Rezepten funktionieren. Siehe {{recipes-url}} und {{addons-url}} für weitere Informationen."

q-features: "Welche Features hat diese Mod?"
a-features: "Siehe {{features-url}}."

q-how-work: "Wie funktioniert diese Mod?"
a-how-work: "Wir verwenden eine modifizierte Version von Rhino, einer JavaScript-Engine von Mozilla, um JavaScript-Code zur Laufzeit in Java-Klassen zu konvertieren. KubeJS hat eigene Wrapper für Minecraft-Klassen und fügt Hilfsfunktionen hinzu, um die Entwicklung von Skripts zu vereinfachen und die Notwendigkeit für Remapping zur Laufzeit zu entfernen. {{arch-api}} ermöglicht es, gemeinsamen Quellcode für Forge und Fabric zu kompilieren, was Ports zwischen Modloadern extrem einfach macht."

q-support: "Okay, aber was wenn es nicht korrekt funktioniert?"
a-support: "Du kannst uns den Fehler [hier]({{support-url}}) melden."

q-discussion: "Ich habe noch mehr Fragen / Vorschläge!"
a-discussion: "Wenn du im Wiki nicht die Antwort findest, die du gesucht hast, kannst du unserem [Discord-Server]({{discord-url}}) beitreten und im [#kubejs-support]({{discord-url}}) Kanal nach Hilfe fragen!"

website: "Website"
source: "Quellcode und Issue Tracker"
download: "Download"
no-support: "Alle älteren Versionen als {{unsupported-version}} werden nicht mehr unterstützt!"
